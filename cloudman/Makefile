# Makefile.in generated by automake 1.11.1 from Makefile.am.
# cloudman/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/cloudman
pkgincludedir = $(includedir)/cloudman
pkglibdir = $(libdir)/cloudman
pkglibexecdir = $(libexecdir)/cloudman
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = cloudman
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(cloudmandir)" \
	"$(DESTDIR)$(cloudmanxdir)" "$(DESTDIR)$(imgdir)" \
	"$(DESTDIR)$(importdir)" "$(DESTDIR)$(jsdir)" \
	"$(DESTDIR)$(ldapdir)" "$(DESTDIR)$(ldapcdir)" \
	"$(DESTDIR)$(ldaprdir)" "$(DESTDIR)$(ldaptdir)" \
	"$(DESTDIR)$(mediadir)" "$(DESTDIR)$(styledir)" \
	"$(DESTDIR)$(tpldir)" "$(DESTDIR)$(tplbasedir)" \
	"$(DESTDIR)$(tplgroupdir)" "$(DESTDIR)$(tplgrpallocdir)" \
	"$(DESTDIR)$(tpllogdir)" "$(DESTDIR)$(tplprjallocdir)" \
	"$(DESTDIR)$(tplprojectdir)" "$(DESTDIR)$(tplregiondir)" \
	"$(DESTDIR)$(tplresourcedir)" "$(DESTDIR)$(tpltagdir)" \
	"$(DESTDIR)$(tpltopdir)" "$(DESTDIR)$(tplzonedir)" \
	"$(DESTDIR)$(urldir)" "$(DESTDIR)$(webdir)" \
	"$(DESTDIR)$(wwwdir)"
DATA = $(cloudman_DATA) $(cloudmanx_DATA) $(img_DATA) $(import_DATA) \
	$(js_DATA) $(ldap_DATA) $(ldapc_DATA) $(ldapr_DATA) \
	$(ldapt_DATA) $(media_DATA) $(style_DATA) $(tpl_DATA) \
	$(tplbase_DATA) $(tplgroup_DATA) $(tplgrpalloc_DATA) \
	$(tpllog_DATA) $(tplprjalloc_DATA) $(tplproject_DATA) \
	$(tplregion_DATA) $(tplresource_DATA) $(tpltag_DATA) \
	$(tpltop_DATA) $(tplzone_DATA) $(url_DATA) $(web_DATA) \
	$(www_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /afs/cern.ch/user/u/uschwick/cloudman/missing --run aclocal-1.11
AMTAR = ${SHELL} /afs/cern.ch/user/u/uschwick/cloudman/missing --run tar
AUTOCONF = ${SHELL} /afs/cern.ch/user/u/uschwick/cloudman/missing --run autoconf
AUTOHEADER = ${SHELL} /afs/cern.ch/user/u/uschwick/cloudman/missing --run autoheader
AUTOMAKE = ${SHELL} /afs/cern.ch/user/u/uschwick/cloudman/missing --run automake-1.11
AWK = gawk
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"cloudman\" -DVERSION=\"0.1.1\"
ECHO_C = 
ECHO_N = -n
ECHO_T = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /afs/cern.ch/user/u/uschwick/cloudman/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
PACKAGE = cloudman
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1.1
abs_builddir = /afs/cern.ch/user/u/uschwick/cloudman/cloudman
abs_srcdir = /afs/cern.ch/user/u/uschwick/cloudman/cloudman
abs_top_builddir = /afs/cern.ch/user/u/uschwick/cloudman
abs_top_srcdir = /afs/cern.ch/user/u/uschwick/cloudman
am__leading_dot = .
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /afs/cern.ch/user/u/uschwick/cloudman/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#
# subdirectories
#
SUBDIRS = script etc

# other stuff
wwwdir = ${prefix}/var/www/cloudman
www_DATA = cloudman.wsgi *.py

# cloudman base stuff
cloudmandir = ${wwwdir}/cloudman
cloudman_DATA = cloudman/*.py
cloudmanxdir = ${wwwdir}/cloudman/xml
cloudmanx_DATA = cloudman/xml/*.py

# import tools
importdir = ${wwwdir}/import
import_DATA = import/*.py

# ldap tools
ldapdir = ${wwwdir}/ldapRoleCreator
ldap_DATA = ldapRoleCreator/*.py
ldaptdir = ${wwwdir}/ldapRoleCreator/test
ldapt_DATA = ldapRoleCreator/test/*.py
ldaprdir = ${wwwdir}/ldapRoleCreator/roleCreator
ldapr_DATA = ldapRoleCreator/roleCreator/*.py
ldapcdir = ${wwwdir}/ldapRoleCreator/roleCreator/code
ldapc_DATA = ldapRoleCreator/roleCreator/code/*.py

# url 
urldir = ${wwwdir}/url
url_DATA = url/*.py

# media
mediadir = ${wwwdir}/media
media_DATA = media/*.png media/*.jpg media/*.css media/*.gif
imgdir = ${mediadir}/images
img_DATA = media/images/*.jpg media/images/*.png media/images/*.gif
jsdir = ${mediadir}/javascript
js_DATA = media/javascript/*.js
styledir = ${mediadir}/stylesheet
style_DATA = media/stylesheet/*.css
webdir = ${mediadir}/web
web_DATA = media/web/*.js

#
# templates
#
tpldir = ${wwwdir}/templates
tpl_DATA = templates/*.html
tplbasedir = ${tpldir}/base
tplbase_DATA = templates/base/*.html
tplregiondir = ${tpldir}/region
tplregion_DATA = templates/region/*.html
tplzonedir = ${tpldir}/zone
tplzone_DATA = templates/zone/*.html
tplresourcedir = ${tpldir}/resourcetype
tplresource_DATA = templates/resourcetype/*.html
tplgroupdir = ${tpldir}/group
tplgroup_DATA = templates/group/*.html
tplprojectdir = ${tpldir}/project
tplproject_DATA = templates/project/*.html
tpltopdir = ${tpldir}/toplevelallocation
tpltop_DATA = templates/toplevelallocation/*.html
tplgrpallocdir = ${tpldir}/groupallocation
tplgrpalloc_DATA = templates/groupallocation/*.html
tplprjallocdir = ${tpldir}/projectallocation
tplprjalloc_DATA = templates/projectallocation/*.html
tpllogdir = ${tpldir}/log
tpllog_DATA = templates/log/*.html

#
# templatestags
#
tpltagdir = ${wwwdir}/templatetags
tpltag_DATA = templatetags/*.py
all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu cloudman/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu cloudman/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-cloudmanDATA: $(cloudman_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(cloudmandir)" || $(MKDIR_P) "$(DESTDIR)$(cloudmandir)"
	@list='$(cloudman_DATA)'; test -n "$(cloudmandir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(cloudmandir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(cloudmandir)" || exit $$?; \
	done

uninstall-cloudmanDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(cloudman_DATA)'; test -n "$(cloudmandir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(cloudmandir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(cloudmandir)" && rm -f $$files
install-cloudmanxDATA: $(cloudmanx_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(cloudmanxdir)" || $(MKDIR_P) "$(DESTDIR)$(cloudmanxdir)"
	@list='$(cloudmanx_DATA)'; test -n "$(cloudmanxdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(cloudmanxdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(cloudmanxdir)" || exit $$?; \
	done

uninstall-cloudmanxDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(cloudmanx_DATA)'; test -n "$(cloudmanxdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(cloudmanxdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(cloudmanxdir)" && rm -f $$files
install-imgDATA: $(img_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(imgdir)" || $(MKDIR_P) "$(DESTDIR)$(imgdir)"
	@list='$(img_DATA)'; test -n "$(imgdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(imgdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(imgdir)" || exit $$?; \
	done

uninstall-imgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(img_DATA)'; test -n "$(imgdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(imgdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(imgdir)" && rm -f $$files
install-importDATA: $(import_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(importdir)" || $(MKDIR_P) "$(DESTDIR)$(importdir)"
	@list='$(import_DATA)'; test -n "$(importdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(importdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(importdir)" || exit $$?; \
	done

uninstall-importDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(import_DATA)'; test -n "$(importdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(importdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(importdir)" && rm -f $$files
install-jsDATA: $(js_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(jsdir)" || $(MKDIR_P) "$(DESTDIR)$(jsdir)"
	@list='$(js_DATA)'; test -n "$(jsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(jsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(jsdir)" || exit $$?; \
	done

uninstall-jsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(js_DATA)'; test -n "$(jsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(jsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(jsdir)" && rm -f $$files
install-ldapDATA: $(ldap_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ldapdir)" || $(MKDIR_P) "$(DESTDIR)$(ldapdir)"
	@list='$(ldap_DATA)'; test -n "$(ldapdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ldapdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ldapdir)" || exit $$?; \
	done

uninstall-ldapDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ldap_DATA)'; test -n "$(ldapdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ldapdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ldapdir)" && rm -f $$files
install-ldapcDATA: $(ldapc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ldapcdir)" || $(MKDIR_P) "$(DESTDIR)$(ldapcdir)"
	@list='$(ldapc_DATA)'; test -n "$(ldapcdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ldapcdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ldapcdir)" || exit $$?; \
	done

uninstall-ldapcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ldapc_DATA)'; test -n "$(ldapcdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ldapcdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ldapcdir)" && rm -f $$files
install-ldaprDATA: $(ldapr_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ldaprdir)" || $(MKDIR_P) "$(DESTDIR)$(ldaprdir)"
	@list='$(ldapr_DATA)'; test -n "$(ldaprdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ldaprdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ldaprdir)" || exit $$?; \
	done

uninstall-ldaprDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ldapr_DATA)'; test -n "$(ldaprdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ldaprdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ldaprdir)" && rm -f $$files
install-ldaptDATA: $(ldapt_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ldaptdir)" || $(MKDIR_P) "$(DESTDIR)$(ldaptdir)"
	@list='$(ldapt_DATA)'; test -n "$(ldaptdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ldaptdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ldaptdir)" || exit $$?; \
	done

uninstall-ldaptDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ldapt_DATA)'; test -n "$(ldaptdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(ldaptdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(ldaptdir)" && rm -f $$files
install-mediaDATA: $(media_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(mediadir)" || $(MKDIR_P) "$(DESTDIR)$(mediadir)"
	@list='$(media_DATA)'; test -n "$(mediadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(mediadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(mediadir)" || exit $$?; \
	done

uninstall-mediaDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(media_DATA)'; test -n "$(mediadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(mediadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(mediadir)" && rm -f $$files
install-styleDATA: $(style_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(styledir)" || $(MKDIR_P) "$(DESTDIR)$(styledir)"
	@list='$(style_DATA)'; test -n "$(styledir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(styledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(styledir)" || exit $$?; \
	done

uninstall-styleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(style_DATA)'; test -n "$(styledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(styledir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(styledir)" && rm -f $$files
install-tplDATA: $(tpl_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tpldir)" || $(MKDIR_P) "$(DESTDIR)$(tpldir)"
	@list='$(tpl_DATA)'; test -n "$(tpldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tpldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tpldir)" || exit $$?; \
	done

uninstall-tplDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tpl_DATA)'; test -n "$(tpldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tpldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tpldir)" && rm -f $$files
install-tplbaseDATA: $(tplbase_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplbasedir)" || $(MKDIR_P) "$(DESTDIR)$(tplbasedir)"
	@list='$(tplbase_DATA)'; test -n "$(tplbasedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplbasedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplbasedir)" || exit $$?; \
	done

uninstall-tplbaseDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplbase_DATA)'; test -n "$(tplbasedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplbasedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplbasedir)" && rm -f $$files
install-tplgroupDATA: $(tplgroup_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplgroupdir)" || $(MKDIR_P) "$(DESTDIR)$(tplgroupdir)"
	@list='$(tplgroup_DATA)'; test -n "$(tplgroupdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplgroupdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplgroupdir)" || exit $$?; \
	done

uninstall-tplgroupDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplgroup_DATA)'; test -n "$(tplgroupdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplgroupdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplgroupdir)" && rm -f $$files
install-tplgrpallocDATA: $(tplgrpalloc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplgrpallocdir)" || $(MKDIR_P) "$(DESTDIR)$(tplgrpallocdir)"
	@list='$(tplgrpalloc_DATA)'; test -n "$(tplgrpallocdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplgrpallocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplgrpallocdir)" || exit $$?; \
	done

uninstall-tplgrpallocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplgrpalloc_DATA)'; test -n "$(tplgrpallocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplgrpallocdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplgrpallocdir)" && rm -f $$files
install-tpllogDATA: $(tpllog_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tpllogdir)" || $(MKDIR_P) "$(DESTDIR)$(tpllogdir)"
	@list='$(tpllog_DATA)'; test -n "$(tpllogdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tpllogdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tpllogdir)" || exit $$?; \
	done

uninstall-tpllogDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tpllog_DATA)'; test -n "$(tpllogdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tpllogdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tpllogdir)" && rm -f $$files
install-tplprjallocDATA: $(tplprjalloc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplprjallocdir)" || $(MKDIR_P) "$(DESTDIR)$(tplprjallocdir)"
	@list='$(tplprjalloc_DATA)'; test -n "$(tplprjallocdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplprjallocdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplprjallocdir)" || exit $$?; \
	done

uninstall-tplprjallocDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplprjalloc_DATA)'; test -n "$(tplprjallocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplprjallocdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplprjallocdir)" && rm -f $$files
install-tplprojectDATA: $(tplproject_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplprojectdir)" || $(MKDIR_P) "$(DESTDIR)$(tplprojectdir)"
	@list='$(tplproject_DATA)'; test -n "$(tplprojectdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplprojectdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplprojectdir)" || exit $$?; \
	done

uninstall-tplprojectDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplproject_DATA)'; test -n "$(tplprojectdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplprojectdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplprojectdir)" && rm -f $$files
install-tplregionDATA: $(tplregion_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplregiondir)" || $(MKDIR_P) "$(DESTDIR)$(tplregiondir)"
	@list='$(tplregion_DATA)'; test -n "$(tplregiondir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplregiondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplregiondir)" || exit $$?; \
	done

uninstall-tplregionDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplregion_DATA)'; test -n "$(tplregiondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplregiondir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplregiondir)" && rm -f $$files
install-tplresourceDATA: $(tplresource_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplresourcedir)" || $(MKDIR_P) "$(DESTDIR)$(tplresourcedir)"
	@list='$(tplresource_DATA)'; test -n "$(tplresourcedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplresourcedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplresourcedir)" || exit $$?; \
	done

uninstall-tplresourceDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplresource_DATA)'; test -n "$(tplresourcedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplresourcedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplresourcedir)" && rm -f $$files
install-tpltagDATA: $(tpltag_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tpltagdir)" || $(MKDIR_P) "$(DESTDIR)$(tpltagdir)"
	@list='$(tpltag_DATA)'; test -n "$(tpltagdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tpltagdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tpltagdir)" || exit $$?; \
	done

uninstall-tpltagDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tpltag_DATA)'; test -n "$(tpltagdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tpltagdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tpltagdir)" && rm -f $$files
install-tpltopDATA: $(tpltop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tpltopdir)" || $(MKDIR_P) "$(DESTDIR)$(tpltopdir)"
	@list='$(tpltop_DATA)'; test -n "$(tpltopdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tpltopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tpltopdir)" || exit $$?; \
	done

uninstall-tpltopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tpltop_DATA)'; test -n "$(tpltopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tpltopdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tpltopdir)" && rm -f $$files
install-tplzoneDATA: $(tplzone_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tplzonedir)" || $(MKDIR_P) "$(DESTDIR)$(tplzonedir)"
	@list='$(tplzone_DATA)'; test -n "$(tplzonedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tplzonedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tplzonedir)" || exit $$?; \
	done

uninstall-tplzoneDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tplzone_DATA)'; test -n "$(tplzonedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tplzonedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tplzonedir)" && rm -f $$files
install-urlDATA: $(url_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(urldir)" || $(MKDIR_P) "$(DESTDIR)$(urldir)"
	@list='$(url_DATA)'; test -n "$(urldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(urldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(urldir)" || exit $$?; \
	done

uninstall-urlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(url_DATA)'; test -n "$(urldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(urldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(urldir)" && rm -f $$files
install-webDATA: $(web_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(webdir)" || $(MKDIR_P) "$(DESTDIR)$(webdir)"
	@list='$(web_DATA)'; test -n "$(webdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(webdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(webdir)" || exit $$?; \
	done

uninstall-webDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(web_DATA)'; test -n "$(webdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(webdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(webdir)" && rm -f $$files
install-wwwDATA: $(www_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(wwwdir)" || $(MKDIR_P) "$(DESTDIR)$(wwwdir)"
	@list='$(www_DATA)'; test -n "$(wwwdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(wwwdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(wwwdir)" || exit $$?; \
	done

uninstall-wwwDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(www_DATA)'; test -n "$(wwwdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(wwwdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(wwwdir)" && rm -f $$files

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(cloudmandir)" "$(DESTDIR)$(cloudmanxdir)" "$(DESTDIR)$(imgdir)" "$(DESTDIR)$(importdir)" "$(DESTDIR)$(jsdir)" "$(DESTDIR)$(ldapdir)" "$(DESTDIR)$(ldapcdir)" "$(DESTDIR)$(ldaprdir)" "$(DESTDIR)$(ldaptdir)" "$(DESTDIR)$(mediadir)" "$(DESTDIR)$(styledir)" "$(DESTDIR)$(tpldir)" "$(DESTDIR)$(tplbasedir)" "$(DESTDIR)$(tplgroupdir)" "$(DESTDIR)$(tplgrpallocdir)" "$(DESTDIR)$(tpllogdir)" "$(DESTDIR)$(tplprjallocdir)" "$(DESTDIR)$(tplprojectdir)" "$(DESTDIR)$(tplregiondir)" "$(DESTDIR)$(tplresourcedir)" "$(DESTDIR)$(tpltagdir)" "$(DESTDIR)$(tpltopdir)" "$(DESTDIR)$(tplzonedir)" "$(DESTDIR)$(urldir)" "$(DESTDIR)$(webdir)" "$(DESTDIR)$(wwwdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-am: clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-cloudmanDATA install-cloudmanxDATA \
	install-imgDATA install-importDATA install-jsDATA \
	install-ldapDATA install-ldapcDATA install-ldaprDATA \
	install-ldaptDATA install-mediaDATA install-styleDATA \
	install-tplDATA install-tplbaseDATA install-tplgroupDATA \
	install-tplgrpallocDATA install-tpllogDATA \
	install-tplprjallocDATA install-tplprojectDATA \
	install-tplregionDATA install-tplresourceDATA \
	install-tpltagDATA install-tpltopDATA install-tplzoneDATA \
	install-urlDATA install-webDATA install-wwwDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-cloudmanDATA uninstall-cloudmanxDATA \
	uninstall-imgDATA uninstall-importDATA uninstall-jsDATA \
	uninstall-ldapDATA uninstall-ldapcDATA uninstall-ldaprDATA \
	uninstall-ldaptDATA uninstall-mediaDATA uninstall-styleDATA \
	uninstall-tplDATA uninstall-tplbaseDATA uninstall-tplgroupDATA \
	uninstall-tplgrpallocDATA uninstall-tpllogDATA \
	uninstall-tplprjallocDATA uninstall-tplprojectDATA \
	uninstall-tplregionDATA uninstall-tplresourceDATA \
	uninstall-tpltagDATA uninstall-tpltopDATA \
	uninstall-tplzoneDATA uninstall-urlDATA uninstall-webDATA \
	uninstall-wwwDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic ctags \
	ctags-recursive distclean distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-cloudmanDATA install-cloudmanxDATA \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-imgDATA install-importDATA install-info \
	install-info-am install-jsDATA install-ldapDATA \
	install-ldapcDATA install-ldaprDATA install-ldaptDATA \
	install-man install-mediaDATA install-pdf install-pdf-am \
	install-ps install-ps-am install-strip install-styleDATA \
	install-tplDATA install-tplbaseDATA install-tplgroupDATA \
	install-tplgrpallocDATA install-tpllogDATA \
	install-tplprjallocDATA install-tplprojectDATA \
	install-tplregionDATA install-tplresourceDATA \
	install-tpltagDATA install-tpltopDATA install-tplzoneDATA \
	install-urlDATA install-webDATA install-wwwDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-cloudmanDATA uninstall-cloudmanxDATA \
	uninstall-imgDATA uninstall-importDATA uninstall-jsDATA \
	uninstall-ldapDATA uninstall-ldapcDATA uninstall-ldaprDATA \
	uninstall-ldaptDATA uninstall-mediaDATA uninstall-styleDATA \
	uninstall-tplDATA uninstall-tplbaseDATA uninstall-tplgroupDATA \
	uninstall-tplgrpallocDATA uninstall-tpllogDATA \
	uninstall-tplprjallocDATA uninstall-tplprojectDATA \
	uninstall-tplregionDATA uninstall-tplresourceDATA \
	uninstall-tpltagDATA uninstall-tpltopDATA \
	uninstall-tplzoneDATA uninstall-urlDATA uninstall-webDATA \
	uninstall-wwwDATA


clean:
	find . -name \*.pyc -exec rm -f \{} \;
	find . -name \*.pyo -exec rm -f \{} \;

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
